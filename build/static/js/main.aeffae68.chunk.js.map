{"version":3,"sources":["reportWebVitals.js","components/nav.js","partials/header/index.js","partials/footer/index.js","components/videobg.js","components/neoTable.js","content/home.js","content/about.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","props","state","error","isLoaded","items","this","setState","datasource","message","className","cssClass","Component","Menu","map","item","target","href","url","label","rel","to","activeClassName","nav","id","Header","navSource","Footer","VideoBG","src","autoPlay","muted","loop","path","type","Card","measurementUnits","missUnits","speedUnits","avDiameter","Number","parseFloat","estimated_diameter","meters","estimated_diameter_min","estimated_diameter_max","toFixed","minDiameter","maxDiameter","velocity","close_approach_data","relative_velocity","kilometers_per_hour","missDistance","miss_distance","kilometers","closeApproach","close_approach_date_full","name","is_potentially_hazardous_asteroid","is_sentry_object","title","absolute_magnitude_h","nasa_jpl_url","Sorter","sorting","sortBy","handleNullClick","bind","handleAscClick","handleDescClick","onClick","children","NeoTable","startAt","endAt","total","sortDirection","displayType","fetch","res","json","result","count","start","end","data","alt","Home","body","document","getElementsByTagName","removeAttribute","classList","add","About","ReactDOM","render","StrictMode","component","getElementById"],"mappings":"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","file":"static/js/main.aeffae68.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoaded: true, \r\n            items: this.props.datasource\r\n        });\r\n    }\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } \r\n        else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } \r\n        else {\r\n        return (\r\n            <nav className={this.props.cssClass} >\r\n                <Menu datasource={items} />\r\n            </nav>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nclass Menu extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoaded: true,\r\n            items: this.props.datasource\r\n        });\r\n    }\r\n   render() {\r\n        const { items } = this.state;\r\n        return(\r\n            <ul>\r\n                {items.map(item => (\r\n                    <li key={item.id}>\r\n                        {(() => {\r\n                            switch (item.target) {\r\n                                case \"internal\": return(\r\n                                    <a href={item.url}>{item.label}</a>\r\n                                )\r\n                                case \"external\": return(\r\n                                    <a href={item.url} target=\"_blank\" rel=\"noreferrer\">{item.label}</a>\r\n                                )   \r\n                                default: return(\r\n                                    <NavLink to={item.url} activeClassName=\"active\">{item.label}</NavLink>\r\n                                )\r\n                            }\r\n                        })()}\r\n                        {item.nav\r\n                            ? <Menu datasource={item.nav} />\r\n                            : \"\"\r\n                        }\r\n                    </li>\r\n                ))}\r\n        </ul>\r\n        )\r\n    }\r\n}\r\n\r\nclass LoginButton extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedin:false,\r\n            user:null,\r\n            token: null,\r\n            overlay:false\r\n        };\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n        this.body = document.getElementsByTagName(\"body\")[0]\r\n    }\r\n    handleLogin(){\r\n       this.body.classList.add(\"overlay\",\"active\");\r\n       document.querySelectorAll(\"#loginoverlay\")[0].classList.add('active')\r\n       \r\n\r\n    }\r\n    componentDidMount() {\r\n        if(document.querySelectorAll(\"#loginoverlay\").length<1){\r\n            let loginoverlay = document.createElement(\"div\")\r\n            loginoverlay.classList.add(\"loginoverlay\", \"overlay\")\r\n            loginoverlay.id=\"loginoverlay\";\r\n            this.body.append(loginoverlay)\r\n        }\r\n        \r\n    }\r\n    handleLogout(){\r\n\r\n    }\r\n    render(){\r\n        const {loggedin} = this.state\r\n        if(loggedin === false){\r\n            return(\r\n                <button onClick={this.handleLogin}>Login</button>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <button onClick={this.handleLogout}>Logout</button>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    Nav,\r\n    Menu,\r\n    LoginButton\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Nav }from \"../../components/nav\";\r\nimport navSource from '../../data/headerlinks.json';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n          <div className=\"container\">\r\n              <NavLink to=\"/\" className=\"logo\" activeClassName=\"active\">Home</NavLink>\r\n              <Nav cssClass=\"topnav\" datasource={navSource.nav}/>\r\n          </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Nav }from \"../../components/nav\";\r\nimport navSource from '../../data/footerlinks.json';\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <footer>\r\n                <div className=\"container\">\r\n                    <Nav cssClass=\"footerpnav\" datasource={navSource.nav}/>\r\n                    <div className=\"colophon\">\r\n                        <p>&copy; 2021 - Site by Joe Porto. Images and video assets from <a href=\"https://www.pexels.com/\">https://www.pexels.com/</a>. Data from the NASA API.</p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass VideoBG extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            src:\"\",\r\n        };\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"videobg\">\r\n                <video autoPlay={true} muted={true} loop={true}>\r\n                    <source src={this.props.path} type=\"video/mp4\"/>\r\n                </video>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default VideoBG","import React, { Component, useState, useEffect } from 'react';\r\n\r\n\r\nclass Card extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            measurementUnits: \"meters\",\r\n            missUnits: \"km\",\r\n            speedUnits: \"km/h\",\r\n            item: this.props.item\r\n        }\r\n    }\r\n    render(){\r\n        const { item, measurementUnits, speedUnits,missUnits } = this.state;\r\n        const avDiameter = Number.parseFloat((item.estimated_diameter.meters.estimated_diameter_min + item.estimated_diameter.meters.estimated_diameter_max) / 2).toFixed(3);\r\n        const minDiameter = Number.parseFloat(item.estimated_diameter.meters.estimated_diameter_min).toFixed(2)\r\n        const maxDiameter = Number.parseFloat(item.estimated_diameter.meters.estimated_diameter_max).toFixed(2)\r\n        const velocity = Number.parseFloat(item.close_approach_data[0].relative_velocity.kilometers_per_hour).toFixed(3);\r\n        const missDistance = Number.parseFloat(item.close_approach_data[0].miss_distance.kilometers).toFixed(3);\r\n        const closeApproach = item.close_approach_data[0].close_approach_date_full\r\n        return(\r\n            <tr key={item.id}>\r\n                <td className=\"itemid alignRight\">{item.id}</td>\r\n                <td className=\"itemname\">{item.name}</td>\r\n                <td className=\"diameter\">\r\n                    <span>{avDiameter} {measurementUnits}</span>\r\n                    <span className=\"info\">Min: {minDiameter} Max: {maxDiameter} </span>\r\n                </td>\r\n                {item.is_potentially_hazardous_asteroid\r\n                    ? <td className=\"potential hazardous\">Yes</td>\r\n                    : <td className=\"potential safe\">No</td>\r\n                }\r\n                {item.is_sentry_object\r\n                    ? <td className=\"sentry isSentry\">Yes</td>\r\n                    : <td className=\"sentry notSentry\">No</td>\r\n                }\r\n                <td className=\"velocity alignRight\">{velocity}</td>\r\n                <td className=\"missdistance alignRight\" title={`${item.close_approach_data[0].miss_distance.kilometers} ${missUnits}`}>{missDistance}</td>\r\n                <td className=\"magnitude alignRight\">{item.absolute_magnitude_h}</td>\r\n                <td className=\"approach alignRight\">{closeApproach}</td>\r\n                <td className=\"info alignCenter\"><a href={item.nasa_jpl_url} target=\"_blank\" rel=\"noreferrer nofollow\">JPL Link</a></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass Sorter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            sorting:null,\r\n            sortBy:this.props.sortBy\r\n        }\r\n        this.handleNullClick = this.handleNullClick.bind(this);\r\n        this.handleAscClick = this.handleAscClick.bind(this);\r\n        this.handleDescClick = this.handleDescClick.bind(this);\r\n    }\r\n    handleNullClick(){\r\n        this.setState({\r\n            sorting:\"asc\"\r\n        })\r\n       \r\n    }\r\n    handleAscClick(){\r\n        this.setState({\r\n            sorting:\"desc\"\r\n        })\r\n    }\r\n    handleDescClick(){\r\n        this.setState({\r\n            sorting:null\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.sorting === null){\r\n            return(\r\n                <button onClick={this.handleNullClick} className=\"sorting none\">{this.props.children}</button>\r\n            )\r\n        }\r\n        if(this.state.sorting === \"asc\"){\r\n            return(\r\n                <button onClick={this.handleAscClick} className=\"sorting asc\">{this.props.children}</button>\r\n            )\r\n        }\r\n        if(this.state.sorting === \"desc\"){\r\n            return(\r\n                <button onClick={this.handleDescClick} className=\"sorting desc\">{this.props.children}</button>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass NeoTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startAt:\"\",\r\n            endAt:\"\",\r\n            error: null,\r\n            isLoaded: false,\r\n            total:\"\",\r\n            sortBy:\"id\",\r\n            sortDirection:\"asc\",\r\n            displayType:\"table\",\r\n            items: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(`/api/${this.state.startAt}/${this.state.endAt}`)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    total:result.count,\r\n                    startAt:result.start,\r\n                    endAt:result.end,\r\n                    items:result.data\r\n                });\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        const { error, isLoaded, items, startAt,endAt, total } = this.state;\r\n        if(error){\r\n            return <section id=\"neotable\"><div className=\"container error datagridholder\"><div className=\"datagrid error\">Error: {error.message}</div></div></section>;\r\n        }\r\n        else if (!isLoaded) {\r\n            return (\r\n                <section id=\"neotable\">\r\n                    <div className=\"container loading datagridholder\">\r\n                        <div className=\"datagrid loading\">\r\n                            <h3>Loading</h3>\r\n                            <img src=\"/images/Stars-sphere.gif\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                );\r\n        } \r\n        else{\r\n            return(\r\n                <section id=\"neotable\">\r\n                    <div className=\"container loaded datagridholder\">\r\n                        <div className=\"infobar\">\r\n                            <h3 className=\"tracking\">Currently Tracking <span>{total}</span> Near Earth Objects</h3>\r\n                            <div className=\"currenttime\">Tracking Objects from {startAt} - {endAt}</div>\r\n                            \r\n                        </div>\r\n                        <div className=\"dataholder\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th><Sorter sortBy=\"objId\">Object ID</Sorter></th>\r\n                                        <th>Name</th>\r\n                                        <th>Diameter</th>\r\n                                        <th>Hazard</th>\r\n                                        <th>Sentry Status</th>\r\n                                        <th>Velocity (km/h)</th>\r\n                                        <th>Miss (km)</th>\r\n                                        <th>Magnitude</th>\r\n                                        <th>Approach</th>\r\n                                        <th>Info</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {items.map(item => (\r\n                                       <Card item={item}  key={item.id}/>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nexport default NeoTable","import React, { Component } from 'react';\r\nimport VideoBG from \"../components/videobg\"\r\nimport NeoTable from '../components/neoTable';\r\n\r\n\r\nclass Home  extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={}\r\n        this.body = document.getElementsByTagName(\"body\")[0]\r\n    }\r\n    componentDidMount() {\r\n        this.body.removeAttribute('class');\r\n        this.body.classList.add(\"home_page\");\r\n        document.title = `Home | NeoWS Project`;\r\n        //we'll deal with seo at a different time...\r\n        //document.querySelector('meta[name=\"description\"]').setAttribute(\"content\", `this is a react project`);\r\n        //document.querySelector('meta[name=\"og:desc\"]').setAttribute(\"content\",`this is a react project`);\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <VideoBG path=\"/images/earth.mp4\"/>\r\n                <main className=\"home\">\r\n                    <section>\r\n                        <div className=\"container\">\r\n                            <div className=\"text\">\r\n                                <h1>NeoWS</h1>\r\n                                <h2>Near Earth Object<br/> Web Service</h2>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <NeoTable/>\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\n\r\nclass About  extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={}\r\n        this.body = document.getElementsByTagName(\"body\")[0]\r\n    }\r\n    componentDidMount() {\r\n        document.title = `About | NeoWS Project`  ;\r\n        this.body.removeAttribute('class');\r\n        this.body.classList.add(\"about_page\");\r\n        //document.querySelector('meta[name=\"description\"]').setAttribute(\"content\", `this is a react project, using express backend and the mysql sakila sample database`);\r\n        //document.querySelector('meta[name=\"og:desc\"]').setAttribute(\"content\",`this is a react project, using express backend and the mysql sakila sample database`);\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <main>\r\n                <section id=\"about\">\r\n                    <div className=\"container\">\r\n                        <h1>About</h1>\r\n                        <div className=\"textcontent\">\r\n                            <p>This site was created in response to a coding challenge. It consumes an api from Nasa, digests the info passed back, and presents the info to the user.</p>\r\n                            <p>Technologies used:</p>\r\n                            <ul>\r\n                                <li>NodeJS Backend</li>\r\n                                <li>Express</li>\r\n                                <li>ReactJS Front end</li>\r\n                                <li>SCSS CSS3</li>\r\n                                <li>HTML5</li>\r\n                                <li>AWS Hosting</li>\r\n                                <li>GitHub</li>\r\n                            </ul>\r\n                            <h3>Challenges</h3>\r\n                            <p>Biggest challenge was probably the time. This has been stood up from a greenfield project in approximately 2 days. There was no design, or UI/UX, so I probably spent more time than necessary looking for assets.</p>\r\n                            <p>Secondly, using a completely new api. The time constraints didn't really help here either.</p>\r\n                            <p>Please visit the <a href=\"https://github.com/flatline01/asteroids_neows\" target=\"_blank\" rel=\"noreferrer noopener\">GitHub Project Page</a> for more info and code.</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {Switch, BrowserRouter, Router, Route,} from \"react-router-dom\";\nimport Header from \"./partials/header/index\";\nimport Footer from \"./partials/footer/index\"\nimport Home from \"./content/home\"\nimport About from \"./content/about\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Header/>\n      <Switch>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      <Footer/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}